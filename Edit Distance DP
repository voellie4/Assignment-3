public class Solution {
    //using dynamic programming
    public int MinDistance(string word1, string word2) {
        int[,] memo = new int[word1.Length+1,word2.Length+1];
        for (int i = 0; i<memo.GetLength(0); i++) {
            memo[i,0] = i;
        }
        for (int i = 0; i<memo.GetLength(1); i++) {
            memo[0,i] = i;
        }
        for (int i=1; i<=word1.Length; i++) {
            for (int j=1; j<=word2.Length; j++) {
                if(word1[i-1]==word2[j-1]) 
                    memo[i,j] = memo[i-1,j-1];
                else
                    memo[i,j] = 1 + MinOfThree(memo[i-1,j-1],memo[i-1,j],memo[i,j-1]);
            }
        }
        return memo[word1.Length,word2.Length];
    }
    
    public int MinOfThree (int a, int b, int c) {
        int d = Math.Min(a,b);
        return Math.Min(d,c);
    }
}
